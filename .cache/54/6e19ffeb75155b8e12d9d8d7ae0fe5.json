{"id":"src/data.js","dependencies":[{"name":"/home/ike/code/search-nasa-photos/package.json","includedInParent":true,"mtime":1613006298895},{"name":"./state","loc":{"line":1,"column":18},"parent":"/home/ike/code/search-nasa-photos/src/data.js","resolved":"/home/ike/code/search-nasa-photos/src/state.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fetchImages;\n\nvar _state = _interopRequireDefault(require(\"./state\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// when get an update from doSearch() file will also get an update here. Prevents having to pass around the search term as a parameter from one file to another.\nfunction fetchImages() {\n  // get search term from state object\n  const url = `https://images-api.nasa.gov/search?q=${_state.default.searchTerm}&media_type=image`;\n  return fetch(url).then(res => res.json()).then(data => data.collection.items) // dont' need all the items of the api, only the collections\n  .catch(error => console.error(error));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/data.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"src/data.js","original":{"line":1,"column":29}},{"generated":{"line":13,"column":0},"source":"src/data.js","original":{"line":3,"column":15}},{"name":"fetchImages","generated":{"line":13,"column":9},"source":"src/data.js","original":{"line":3,"column":24}},{"generated":{"line":13,"column":20},"source":"src/data.js","original":{"line":3,"column":15}},{"generated":{"line":13,"column":23},"source":"src/data.js","original":{"line":3,"column":38}},{"generated":{"line":14,"column":0},"source":"src/data.js","original":{"line":4,"column":4}},{"generated":{"line":15,"column":0},"source":"src/data.js","original":{"line":5,"column":4}},{"name":"url","generated":{"line":15,"column":8},"source":"src/data.js","original":{"line":5,"column":10}},{"generated":{"line":15,"column":11},"source":"src/data.js","original":{"line":5,"column":13}},{"generated":{"line":15,"column":14},"source":"src/data.js","original":{"line":5,"column":17}},{"name":"state","generated":{"line":15,"column":54},"source":"src/data.js","original":{"line":5,"column":56}},{"name":"searchTerm","generated":{"line":15,"column":69},"source":"src/data.js","original":{"line":5,"column":62}},{"generated":{"line":15,"column":79},"source":"src/data.js","original":{"line":5,"column":73}},{"generated":{"line":15,"column":98},"source":"src/data.js","original":{"line":5,"column":4}},{"generated":{"line":16,"column":0},"source":"src/data.js","original":{"line":7,"column":4}},{"name":"fetch","generated":{"line":16,"column":9},"source":"src/data.js","original":{"line":7,"column":11}},{"generated":{"line":16,"column":14},"source":"src/data.js","original":{"line":7,"column":16}},{"name":"url","generated":{"line":16,"column":15},"source":"src/data.js","original":{"line":7,"column":17}},{"generated":{"line":16,"column":18},"source":"src/data.js","original":{"line":7,"column":16}},{"generated":{"line":16,"column":19},"source":"src/data.js","original":{"line":7,"column":11}},{"name":"then","generated":{"line":16,"column":20},"source":"src/data.js","original":{"line":8,"column":9}},{"generated":{"line":16,"column":24},"source":"src/data.js","original":{"line":7,"column":11}},{"name":"res","generated":{"line":16,"column":25},"source":"src/data.js","original":{"line":8,"column":14}},{"generated":{"line":16,"column":28},"source":"src/data.js","original":{"line":8,"column":17}},{"name":"res","generated":{"line":16,"column":32},"source":"src/data.js","original":{"line":8,"column":21}},{"generated":{"line":16,"column":35},"source":"src/data.js","original":{"line":8,"column":24}},{"name":"json","generated":{"line":16,"column":36},"source":"src/data.js","original":{"line":8,"column":25}},{"generated":{"line":16,"column":40},"source":"src/data.js","original":{"line":8,"column":21}},{"generated":{"line":16,"column":42},"source":"src/data.js","original":{"line":7,"column":11}},{"name":"then","generated":{"line":16,"column":44},"source":"src/data.js","original":{"line":9,"column":9}},{"generated":{"line":16,"column":48},"source":"src/data.js","original":{"line":7,"column":11}},{"name":"data","generated":{"line":16,"column":49},"source":"src/data.js","original":{"line":9,"column":14}},{"generated":{"line":16,"column":53},"source":"src/data.js","original":{"line":9,"column":18}},{"name":"data","generated":{"line":16,"column":57},"source":"src/data.js","original":{"line":9,"column":22}},{"generated":{"line":16,"column":61},"source":"src/data.js","original":{"line":9,"column":26}},{"name":"collection","generated":{"line":16,"column":62},"source":"src/data.js","original":{"line":9,"column":27}},{"generated":{"line":16,"column":72},"source":"src/data.js","original":{"line":9,"column":22}},{"name":"items","generated":{"line":16,"column":73},"source":"src/data.js","original":{"line":9,"column":38}},{"generated":{"line":16,"column":78},"source":"src/data.js","original":{"line":7,"column":11}},{"generated":{"line":16,"column":80},"source":"src/data.js","original":{"line":9,"column":45}},{"generated":{"line":17,"column":0},"source":"src/data.js","original":{"line":7,"column":11}},{"name":"catch","generated":{"line":17,"column":3},"source":"src/data.js","original":{"line":10,"column":9}},{"generated":{"line":17,"column":8},"source":"src/data.js","original":{"line":7,"column":11}},{"name":"error","generated":{"line":17,"column":9},"source":"src/data.js","original":{"line":10,"column":15}},{"generated":{"line":17,"column":14},"source":"src/data.js","original":{"line":10,"column":20}},{"name":"console","generated":{"line":17,"column":18},"source":"src/data.js","original":{"line":10,"column":24}},{"generated":{"line":17,"column":25},"source":"src/data.js","original":{"line":10,"column":31}},{"name":"error","generated":{"line":17,"column":26},"source":"src/data.js","original":{"line":10,"column":32}},{"generated":{"line":17,"column":31},"source":"src/data.js","original":{"line":10,"column":24}},{"name":"error","generated":{"line":17,"column":32},"source":"src/data.js","original":{"line":10,"column":38}},{"generated":{"line":17,"column":37},"source":"src/data.js","original":{"line":10,"column":24}},{"generated":{"line":17,"column":38},"source":"src/data.js","original":{"line":7,"column":11}},{"generated":{"line":17,"column":39},"source":"src/data.js","original":{"line":7,"column":4}},{"generated":{"line":18,"column":0},"source":"src/data.js","original":{"line":11,"column":1}}],"sources":{"src/data.js":"import state from \"./state\"; // when get an update from doSearch() file will also get an update here. Prevents having to pass around the search term as a parameter from one file to another.\n\nexport default function fetchImages() {\n    // get search term from state object\n    const url = `https://images-api.nasa.gov/search?q=${state.searchTerm}&media_type=image`;\n    \n    return fetch(url)\n        .then(res => res.json())\n        .then(data => data.collection.items) // dont' need all the items of the api, only the collections\n        .catch(error => console.error(error));\n}"},"lineCount":null}},"error":null,"hash":"5443c470ff8b590d1d1364cb8a6d1333","cacheData":{"env":{}}}