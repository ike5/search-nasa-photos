{"version":3,"sources":["src/state.js","src/data.js","src/components/search/index.js","src/index.js"],"names":["state","searchTerm","images","currentImage","setState","toSet","newValue","fetchImages","url","fetch","then","res","json","data","collection","items","catch","error","console","search","init","document","querySelector","addEventListener","doSearch","event","preventDefault","term","value","toLowerCase","log","markup","insertAdjacentHTML"],"mappings":";;;AAWA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,WAAA,EAPA,MAAMA,EAAQ,CACVC,WAAY,KACZC,OAAQ,KACRC,aAAc,MAIlB,QAAA,MAAA,EAAA,MAAMC,EAAW,CAACC,EAAOC,KACrBN,EAAMK,GAASC,GADnB,QAAA,SAAA;;ACDC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAVD,IAAA,EAAA,EAAA,QAAA,YAUC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GARc,SAASC,IAEdC,MAAAA,0CAA8CR,EAAMC,QAAAA,8BAEnDQ,OAAAA,MAAMD,GACRE,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQA,EAAKC,WAAWC,OAC7BC,MAAMC,GAASC,QAAQD,MAAMA;;ACyBrC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,KAAA,EAlCD,QAAA,eACA,IAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,eAgCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7Bc,SAASE,IACZ,MAAA,mSAWL,SAASC,IACGC,SAASC,cAAc,WAC/BC,iBAAiB,SAAUC,GAItC,eAAeA,EAASC,GAEpBA,EAAMC,iBAEAC,MAAAA,EAAON,SAASC,cAAc,iBAAiBM,MAAMC,eAClD,EAAA,EAAA,UAAA,aAAcF,GAEjBzB,MAAAA,QAAe,EAArB,EAAA,YACS,EAAA,EAAA,UAAA,SAAUA,GAEnBgB,QAAQY,IAAI9B,EAAME,MAAAA;;ACtBlB,aAXJ,IAAA,EAAA,EAAA,QAAA,wBAWI,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EARJ,eAAekB,IAELW,MAAAA,GAAS,EAAf,EAAA,WAGAV,SAASC,cAAc,QAAQU,mBAAmB,YAAaD,IAL7C,EAAA,EAAA,QAFtB,QAAA,eAUAX","file":"src.6dfcdfc1.js","sourceRoot":"..","sourcesContent":["/**\n * This simple state management tool keeps data from being stored \n * in our HTML and makes for much simpler application. \n */\nconst state = {\n    searchTerm: null,\n    images: null,\n    currentImage: null\n}\n\n// update the state object with\nconst setState = (toSet, newValue) => {\n    state[toSet] = newValue;\n}\n\nexport { state, setState };","import state from \"./state\"; // when get an update from doSearch() file will also get an update here. Prevents having to pass around the search term as a parameter from one file to another.\n\nexport default function fetchImages() {\n    // get search term from state object\n    const url = `https://images-api.nasa.gov/search?q=${state.searchTerm}&media_type=image`;\n\n    return fetch(url)\n        .then(res => res.json())\n        .then(data => data.collection.items) // dont' need all the items of the api, only the collections\n        .catch(error => console.error(error));\n}","import \"./index.css\";\nimport { state, setState } from \"../../state\";\nimport fetchImages from \"../../data\";\n\n// default export\nexport default function search() {\n    return `\n    <h1>Search NASA Photos</h1>\n    <form name=\"search\" id=\"search\">\n        <p><label for=\"search-field\">Enter Search Term Below:</label></p>\n        <input id=\"search-field\" name=\"search\" type=\"search\"/>\n        <input type=\"submit\" id=\"submit\" value=\"Search\"/>\n    </form>\n    `;\n}\n\n// named export\nexport function init() {\n    const search = document.querySelector('#search');\n    search.addEventListener('submit', doSearch);\n}\n\n// get the value from teh search field then log to the console\nasync function doSearch(event) {\n    // prevent default of search to happen\n    event.preventDefault();\n\n    const term = document.querySelector('#search-field').value.toLowerCase();\n    setState('searchTerm', term);\n\n    const images = await fetchImages();\n    setState('images', images);\n\n    console.log(state.images);\n}\n\n","import search, { init as initSearch } from \"./components/search\";\r\nimport \"./index.css\";\r\n\r\nasync function init() {\r\n    // import form and title and set to markup\r\n    const markup = search();\r\n\r\n    // add all markup to page\r\n    document.querySelector('#app').insertAdjacentHTML('beforeend', markup);\r\n    initSearch(); // initializes the search form \r\n}\r\ninit();\r\n"]}